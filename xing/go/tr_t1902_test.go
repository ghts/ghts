package xing

import (
	lb "github.com/ghts/ghts/lib"
	"github.com/ghts/ghts/xing/base"

	"testing"
	"time"
)

func TestT1902_ETF_시간별_추이(t *testing.T) {
	t.Parallel()

	지금 := lb.F지금()

	if 지금.Hour() >= 5 && 지금.Hour() < 9 {
		t.SkipNow() // 이 시간대에 테스트 에러가 발생함.
	}

	종목코드 := "069500" // KODEX 200

	값_모음, 에러 := TrT1902_ETF_시간별_추이(종목코드, 100)
	lb.F테스트_에러없음(t, 에러)
	lb.F테스트_다름(t, len(값_모음), 0)

	당일 := F당일()

	초기값 := time.Time{}
	이전_시각 := 초기값

	for _, 값 := range 값_모음 {
		lb.F테스트_같음(t, 값.M시각.Year(), 당일.Year())
		lb.F테스트_같음(t, 값.M시각.Month(), 당일.Month())
		lb.F테스트_같음(t, 값.M시각.Day(), 당일.Day())
		if 이전_시각 != 초기값 {
			lb.F테스트_참임(t, 값.M시각.After(이전_시각), 값.M시각, 이전_시각)
			lb.F테스트_같음(t, 값.M시각.Sub(이전_시각), lb.P1초, lb.P10초)
		}
		이전_시각 = 값.M시각
		lb.F테스트_참임(t, 값.M현재가 > 0)
		lb.F테스트_같음(t, 값.M전일대비구분,
			xt.P구분_상한, xt.P구분_상승, xt.P구분_보합, xt.P구분_하한, xt.P구분_하락)

		switch 값.M전일대비구분 {
		case xt.P구분_상한, xt.P구분_상승:
			lb.F테스트_참임(t, 값.M전일대비등락폭 > 0)
		case xt.P구분_하한, xt.P구분_하락:
			lb.F테스트_참임(t, 값.M전일대비등락폭 < 0,
				값.M전일대비구분, 값.M전일대비등락폭, 값)
		case xt.P구분_보합:
			lb.F테스트_같음(t, 값.M전일대비등락폭, 0)
		default:
			lb.F문자열_출력("예상하지 못한 구분값 : '%v'", 값.M전일대비구분)
			t.FailNow()
		}

		lb.F테스트_참임(t, 값.M누적_거래량 >= 0)
		//lb.F변수값_확인(응답_반복값.M현재가_NAV_차이)   // +- 부호 자체적으로 구분됨.
		lb.F테스트_참임(t, 값.NAV > 0)
		//lb.F변수값_확인(응답_반복값.NAV전일대비등락폭)   // +- 부호 자체적으로 구분됨.
		//lb.F변수값_확인(응답_반복값.M추적오차)   // +- 부호 자체적으로 구분됨.
		//lb.F변수값_확인(응답_반복값.M괴리율)   // +- 부호 자체적으로 구분됨.
		lb.F테스트_참임(t, 값.M지수 >= 0, 종목코드, 값.M지수)
		lb.F테스트_참임(t, 값.M지수_전일대비등락폭*값.M지수_전일대비등락율 >= 0,
			값.M지수_전일대비등락폭, 값.M지수_전일대비등락율)
		//lb.F변수값_확인(응답_반복값.M지수_전일대비등락폭)   // +- 부호 자체적으로 구분됨.
		//lb.F변수값_확인(응답_반복값.M지수_전일대비등락율)   // +- 부호 자체적으로 구분됨.
	}
}
